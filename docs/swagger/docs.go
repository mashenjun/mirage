// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package swagger

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Mirage Backend Support",
            "url": "https://github.com/mashenjun/mirage/issues"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/config/advertise": {
            "get": {
                "description": "获取广告配置",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "静态配置API"
                ],
                "summary": "获取广告配置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "广告code",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "额外信息",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "广告配置",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.AdvConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/api/v1/config/template": {
            "get": {
                "description": "获取版本配置",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "静态配置API"
                ],
                "summary": "获取版本配置",
                "responses": {
                    "200": {
                        "description": "版本配置",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/api/v1/face/detect": {
            "post": {
                "description": "检测人脸年龄",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "人脸处理API"
                ],
                "summary": "检测人脸年龄",
                "parameters": [
                    {
                        "description": "图片地址",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.DetectFaceParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "检测结果，如果没有检测出人脸，code不为0",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/service.DetectFaceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数不正确",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/api/v1/face/edit_attr": {
            "post": {
                "description": "人脸变老，变年轻，变性别",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "人脸处理API"
                ],
                "summary": "人脸变老，变年轻，变性别",
                "parameters": [
                    {
                        "description": "json parameter",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EditAttrParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "处理结果",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/service.EditAttrData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数不正确",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/api/v1/face/merge": {
            "post": {
                "description": "人脸融合",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "人脸处理API"
                ],
                "summary": "人脸融合",
                "parameters": [
                    {
                        "description": "json parameter",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.MergeFaceParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "处理结果",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/service.MergeFaceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数不正确",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/api/v1/image_process/body_seg": {
            "post": {
                "description": "人像分割",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "图像处理API"
                ],
                "summary": "人像分割",
                "parameters": [
                    {
                        "description": "json parameter",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.BodySegParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "处理结果",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/service.BodySegData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数不正确",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/api/v1/image_process/selie_anime": {
            "post": {
                "description": "获取阿里云STS配置",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "图片上传API"
                ],
                "summary": "获取阿里云STS配置",
                "responses": {
                    "200": {
                        "description": "sts临时配置",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/service.UploadSignatureData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/api/v1/image_process/style_trans": {
            "post": {
                "description": "图片风格转换",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "图像处理API"
                ],
                "summary": "图片风格转换",
                "parameters": [
                    {
                        "description": "json parameter",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.StyleTransParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "处理结果",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.BaseResp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/service.StyleTransData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数不正确",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.ErrorInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "0 成功，非0 失败",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.AdvCandidate": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "0 广告; 1 原生; 2 webView",
                    "type": "integer"
                },
                "ad_channel": {
                    "description": "渠道",
                    "type": "string"
                },
                "ad_code": {
                    "description": "广告code",
                    "type": "string"
                },
                "ad_id": {
                    "description": "广告ID",
                    "type": "string"
                },
                "cool_down": {
                    "type": "integer"
                },
                "count_down": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "image_url": {
                    "description": "广告素材，图片地址",
                    "type": "string"
                },
                "location": {
                    "description": "跳转地址",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "model.AdvConfig": {
            "type": "object",
            "properties": {
                "candidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdvCandidate"
                    }
                }
            }
        },
        "model.TemplateImage": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "详细文案",
                    "type": "string"
                },
                "image": {
                    "description": "图片地址",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TemplateImageConfig": {
            "type": "object",
            "properties": {
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TemplateImage"
                    }
                }
            }
        },
        "service.BodySegData": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        },
        "service.BodySegParam": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        },
        "service.DetectFaceData": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "number"
                }
            }
        },
        "service.DetectFaceParam": {
            "type": "object",
            "properties": {
                "image": {
                    "description": "image is the url point to oss url",
                    "type": "string"
                }
            }
        },
        "service.EditAttrData": {
            "type": "object",
            "properties": {
                "image": {
                    "description": "图片地址",
                    "type": "string"
                }
            }
        },
        "service.EditAttrParam": {
            "type": "object",
            "properties": {
                "action_type": {
                    "type": "string",
                    "enum": [
                        "TO_KID",
                        "TO_OLD",
                        "TO_MALE",
                        "TO_FEMAL"
                    ]
                },
                "image": {
                    "type": "string"
                }
            }
        },
        "service.MergeFaceData": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        },
        "service.MergeFaceParam": {
            "type": "object",
            "properties": {
                "target_image": {
                    "type": "string"
                },
                "template_image": {
                    "type": "string"
                }
            }
        },
        "service.SelfieAnimeData": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        },
        "service.SelfieAnimeParam": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        },
        "service.StyleTransData": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        },
        "service.StyleTransParam": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "option": {
                    "type": "string"
                }
            }
        },
        "service.UploadSignatureData": {
            "type": "object",
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "access_key_secret": {
                    "type": "string"
                },
                "bucket_name": {
                    "type": "string"
                },
                "end_point": {
                    "type": "string"
                },
                "expiration": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "security_token": {
                    "type": "string"
                }
            }
        },
        "util.BaseResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "0 成功，非0 失败",
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Mirage Backend API",
	Description: "This is mirage backend server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
